{"version":3,"sources":["redux/actionTypes.ts","components/spinner/Spiner.tsx","components/PokemonImg.tsx","components/SinglePage.tsx","components/MainPage.tsx","redux/actionCreators.ts","components/BackBtn.tsx","components/Pokemon.tsx","components/Move.tsx","App.tsx","reportWebVitals.ts","redux/reducer.ts","redux/store.ts","index.tsx"],"names":["GET_ALL_POKEMONS","SET_PAGE","Spinner","className","useStyles","makeStyles","root","backgroundColor","media","height","width","margin","load","filter","PokemonImg","url","name","id","slice","length","classes","useState","setLoad","useEffect","to","Card","CardMedia","component","image","title","onLoad","SinglePage","pokemons","map","el","i","Grid","item","xs","pages","list","state","page","MainPage","results","useSelector","ind","display","setDisplay","dispatch","useDispatch","container","spacing","Pagination","count","Math","ceil","color","onChange","event","type","payload","setPage","back","position","BackBtn","history","useHistory","Fab","onClick","goBack","size","aria-label","flexDirection","alignItems","description","justifyContent","text","bullet","transform","Pokemon","useParams","pokemon","setPokemon","bull","a","fetch","json","result","Container","toUpperCase","types","stats","stat","base_stat","moves","move","Move","setMove","Box","Typography","variant","gutterBottom","flavor_text_entries","flavor_text","paddingTop","paddingBottom","App","data","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","store","createStore","action","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abe73831.chunk.js","sourcesContent":["export const GET_ALL_POKEMONS = \"GET_ALL_POKEMONS\";\nexport const SET_PAGE = \"SET_PAGE\";\n\nexport type PokemonType = {\n  name: string;\n  url: string;\n};\n\nexport type GetPokemonsType = {\n  type: typeof GET_ALL_POKEMONS;\n  payload: PokemonType[];\n};\n\nexport type SetPageType = {\n  type: typeof SET_PAGE;\n  payload: number;\n};\n","import React from \"react\";\nimport \"./spinner.css\";\n\nconst Spinner: React.FC = () => {\n  return (\n    <div className=\"lds-facebook\">\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n\nexport default Spinner;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, CardMedia } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LazyLoad from \"react-lazyload\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"rgb(208, 235, 250)\",\n  },\n  media: {\n    height: \"20vw\",\n    width: \"20vw\",\n    margin: \"0.3rem auto\",\n  },\n  load: {\n    height: \"20vw\",\n    width: \"20vw\",\n    margin: \"0.3rem auto\",\n    filter: \"blur(25px)\",\n  },\n});\n\ntype Props = {\n  url: string;\n  name: string;\n};\n\nconst PokemonImg: React.FC<Props> = ({ url, name }) => {\n  const id = url.slice(0, url.length - 1);\n  const classes = useStyles();\n  const [load, setLoad] = useState(false);\n\n  useEffect(() => {\n    setLoad(false);\n  }, [url, name]);\n\n  return (\n    <Link to={`/pokemons/${name}`}>\n      <Card className={classes.root}>\n        <LazyLoad>\n          <CardMedia\n            component=\"img\"\n            className={load ? classes.media : classes.load}\n            image={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`}\n            title={name}\n            onLoad={() => setLoad(true)}\n          />\n        </LazyLoad>\n      </Card>\n    </Link>\n  );\n};\n\nexport default PokemonImg;\n","import React from \"react\";\nimport PokemonImg from \"./PokemonImg\";\nimport Grid from \"@material-ui/core/Grid\";\n\ntype PokemonType = {\n  name: string;\n  url: string;\n};\n\ntype Props = {\n  pokemons: PokemonType[];\n};\n\nconst SinglePage: React.FC<Props> = ({ pokemons }) => {\n  return (\n    <>\n      {pokemons.map((el: PokemonType, i: number) => (\n        <Grid key={i} item xs={3}>\n          <PokemonImg name={el.name} url={el.url.slice(34)} />\n        </Grid>\n      ))}\n    </>\n  );\n};\n\nexport default SinglePage;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { setPage } from \"../redux/actionCreators\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Spinner from \"../components/spinner/Spiner\";\nimport SinglePage from \"./SinglePage\";\n\nconst useStyles = makeStyles({\n  pages: {\n    margin: \"1rem auto\",\n  },\n});\n\nexport type PokemonType = {\n  name: string;\n  url: string;\n};\n\ntype StateType = {\n  list: PokemonType[];\n  page: number;\n};\n\ntype DisplayType = PokemonType[] | null;\n\nconst list = (state: StateType) => state.list;\nconst page = (state: StateType) => state.page;\n\nconst MainPage: React.FC = () => {\n  const results = useSelector(list);\n  const ind = useSelector(page);\n  const classes = useStyles();\n  const [display, setDisplay] = useState<DisplayType>();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    results\n      ? setDisplay(results.slice(ind * 20, ind * 20 + 20))\n      : setDisplay([]);\n  }, [ind, results]);\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        {display && <SinglePage pokemons={display} />}\n        {results.length ? (\n          <Pagination\n            className={classes.pages}\n            page={ind + 1}\n            count={Math.ceil(results.length / 20)}\n            color=\"primary\"\n            onChange={(event: object, page: number) => {\n              dispatch(setPage(page - 1));\n            }}\n          />\n        ) : (\n          <Spinner />\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default MainPage;\n","import {\n  GET_ALL_POKEMONS,\n  SET_PAGE,\n  PokemonType,\n  GetPokemonsType,\n  SetPageType,\n} from \"./actionTypes\";\nimport { Action } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { RootState } from \"./reducer\";\n\nconst getPokemons = (pokemons: PokemonType[]): GetPokemonsType => ({\n  type: GET_ALL_POKEMONS,\n  payload: pokemons,\n});\n\nexport const setPage = (page: number): SetPageType => ({\n  type: SET_PAGE,\n  payload: page,\n});\n\nexport const downloadPokemons = (): ThunkAction<\n  void,\n  RootState,\n  unknown,\n  Action<string>\n> => {\n  return async (dispatch) => {\n    const data = await (\n      await fetch(\"https://pokeapi.co/api/v2/pokemon?limit=800\")\n    ).json();\n    dispatch(getPokemons(data.results));\n  };\n};\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\n\nconst useStyles = makeStyles({\n  back: {\n    position: \"fixed\",\n  },\n});\n\nconst BackBtn: React.FC = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  return (\n    <>\n      <Fab\n        onClick={() => {\n          history.goBack();\n        }}\n        size=\"small\"\n        className={classes.back}\n        color=\"primary\"\n        aria-label=\"back\"\n      >\n        <ArrowBackIcon />\n      </Fab>\n    </>\n  );\n};\n\nexport default BackBtn;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Container, CardMedia, Grid } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BackBtn from \"./BackBtn\";\nimport Spinner from \"./spinner/Spiner\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  media: {\n    height: \"30vw\",\n    width: \"30vw\",\n  },\n  description: {\n    width: \"80vw\",\n    display: \"flex\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\",\n  },\n  text: {\n    margin: 0,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n});\n\ntype ParamsType = {\n  name: string;\n};\n\ntype PokemonType = {\n  name: string;\n  moves: any[];\n  types: any[];\n  stats: any[];\n  id: string;\n};\n\nconst Pokemon: React.FC = () => {\n  const { name } = useParams<ParamsType>();\n  const [pokemon, setPokemon] = useState<PokemonType | null>();\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>•</span>;\n\n  useEffect(() => {\n    (async function () {\n      const result = await (\n        await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\n      ).json();\n      setPokemon(result);\n    })();\n  }, [name]);\n\n  return (\n    <>\n      <BackBtn />\n      <Container className={classes.root}>\n        {pokemon ? (\n          <>\n            <h1 className={classes.text}>{pokemon.name.toUpperCase()}</h1>\n            <p>\n              <b>Type:</b> {pokemon.types[0].type.name}\n            </p>\n            <div className={classes.description}>\n              <CardMedia\n                className={classes.media}\n                image={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\n                title={pokemon.name}\n              />\n              <ul>\n                <b>Stats</b>\n                {pokemon.stats.map((el: any, i: number) => (\n                  <li key={i}>\n                    {el.stat.name}: {el.base_stat}\n                  </li>\n                ))}\n              </ul>\n            </div>\n            <h3>Abilities:</h3>\n            <Grid container spacing={2}>\n              {pokemon.moves.map((el: any, i: number) => (\n                <Grid key={i} item xs={3}>\n                  {bull}\n                  <Link to={`/moves/${el.move.name}`} key={i}>\n                    {el.move.name}\n                  </Link>\n                </Grid>\n              ))}\n            </Grid>\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Pokemon;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Box, Typography } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport BackBtn from \"./BackBtn\";\nimport Spinner from \"./spinner/Spiner\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n});\n\ntype ParamsType = {\n  name: string;\n};\n\ntype MoveType = {\n  name: string;\n  flavor_text_entries: any[];\n};\n\nconst Move: React.FC = () => {\n  const { name } = useParams<ParamsType>();\n  const [move, setMove] = useState<MoveType | null>();\n  const classes = useStyles();\n\n  useEffect(() => {\n    (async function () {\n      const result = await (\n        await fetch(`https://pokeapi.co/api/v2/move/${name}`)\n      ).json();\n      setMove(result);\n    })();\n  }, [name]);\n\n  return (\n    <>\n      <BackBtn />\n      <Box className={classes.root}>\n        {move ? (\n          <>\n            <Typography variant=\"h3\" gutterBottom>\n              {move.name.toUpperCase()}\n            </Typography>\n            <Typography variant=\"subtitle1\" gutterBottom>\n              {move.flavor_text_entries[0].flavor_text}\n            </Typography>\n          </>\n        ) : (\n          <Spinner />\n        )}\n      </Box>\n    </>\n  );\n};\n\nexport default Move;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { downloadPokemons } from \"./redux/actionCreators\";\nimport MainPage from \"./components/MainPage\";\nimport Pokemon from \"./components/Pokemon\";\nimport Move from \"./components/Move\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\n\nconst useStyles = makeStyles({\n  root: {\n    backgroundColor: \"rgb(179, 223, 248)\",\n    paddingTop: \"1rem\",\n    paddingBottom: \"2rem\",\n    height: \"100%\",\n  },\n});\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(downloadPokemons());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Container className={classes.root}>\n        <BrowserRouter>\n          <Switch>\n            <Route path=\"/moves/:name\">\n              <Move />\n            </Route>\n            <Route path=\"/pokemons/:name\">\n              <Pokemon />\n            </Route>\n            <Route path=\"/\">\n              <MainPage />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </Container>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  GET_ALL_POKEMONS,\n  SET_PAGE,\n  PokemonType,\n  GetPokemonsType,\n  SetPageType,\n} from \"./actionTypes\";\n\ntype ReducerType = {\n  list: PokemonType[];\n  page: number;\n};\n\ntype ReducerActionTypes = GetPokemonsType | SetPageType;\n\nconst initialState: ReducerType = { list: [], page: 0 };\n\nexport function reducer(\n  state = initialState,\n  action: ReducerActionTypes\n): ReducerType {\n  switch (action.type) {\n    case GET_ALL_POKEMONS:\n      return { ...state, list: action.payload };\n    case SET_PAGE:\n      return { ...state, page: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport type RootState = ReturnType<typeof reducer>;\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { reducer } from \"./reducer\";\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}